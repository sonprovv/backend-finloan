"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/auth/login/page",{

/***/ "(app-pages-browser)/./lib/auth.tsx":
/*!**********************!*\
  !*** ./lib/auth.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: function() { return /* binding */ AuthProvider; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    user: null,\n    token: null,\n    isAuthenticated: false,\n    isLoading: true,\n    login: async ()=>{},\n    register: async ()=>{},\n    logout: ()=>{},\n    checkAuthStatus: ()=>false,\n    verifyAuthState: ()=>({\n            isValid: false,\n            hasToken: false,\n            hasUser: false,\n            stateToken: null\n        })\n});\nconst AuthProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [token, setToken] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const initializeAuth = async ()=>{\n            try {\n                const storedToken = localStorage.getItem(\"token\");\n                console.log(\"Initializing auth with token:\", storedToken);\n                if (storedToken) {\n                    setToken(storedToken);\n                    await fetchUserProfile(storedToken);\n                } else {\n                    console.log(\"No token found in localStorage\");\n                    setIsLoading(false);\n                }\n            } catch (error) {\n                console.error(\"Error initializing auth:\", error);\n                localStorage.removeItem(\"token\");\n                setToken(null);\n                setUser(null);\n                setIsLoading(false);\n            }\n        };\n        initializeAuth();\n    }, []);\n    const fetchUserProfile = async (authToken)=>{\n        try {\n            console.log(\"Fetching user profile with token:\", authToken);\n            const response = await fetch(\"http://localhost:8000/auth/me\", {\n                headers: {\n                    \"Authorization\": authToken\n                }\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch user profile\");\n            }\n            const userData = await response.json();\n            console.log(\"Setting user data:\", userData);\n            setUser(userData);\n            setIsLoading(false);\n        } catch (error) {\n            console.error(\"Failed to fetch user profile:\", error);\n            localStorage.removeItem(\"token\");\n            setToken(null);\n            setUser(null);\n            setIsLoading(false);\n        }\n    };\n    const login = async (username, password)=>{\n        console.log(\"Starting login process...\");\n        setIsLoading(true);\n        try {\n            // Call actual API\n            const response = await fetch(\"http://localhost:8000/auth/login\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    username,\n                    password\n                })\n            });\n            if (!response.ok) {\n                const errorData = await response.json().catch(()=>null);\n                console.error(\"Login API error:\", {\n                    status: response.status,\n                    statusText: response.statusText,\n                    errorData\n                });\n                throw new Error((errorData === null || errorData === void 0 ? void 0 : errorData.detail) || \"Login failed\");\n            }\n            const loginResponse = await response.json();\n            console.log(\"Login API response:\", loginResponse);\n            if (!loginResponse.access_token || !loginResponse.token_type) {\n                console.error(\"Invalid login response format:\", loginResponse);\n                throw new Error(\"Invalid login response format\");\n            }\n            console.log(\"Login successful, preparing to save token...\");\n            // Create full token string\n            const authToken = \"\".concat(loginResponse.token_type, \" \").concat(loginResponse.access_token);\n            // Save token to localStorage\n            localStorage.setItem(\"token\", authToken);\n            const savedToken = localStorage.getItem(\"token\");\n            console.log(\"Token saved to localStorage:\", savedToken);\n            if (!savedToken) {\n                throw new Error(\"Failed to save token to localStorage\");\n            }\n            // Update token state first\n            setToken(authToken);\n            console.log(\"Token state updated:\", authToken);\n            // Fetch user profile\n            const profileResponse = await fetch(\"http://localhost:8000/auth/me\", {\n                headers: {\n                    \"Authorization\": authToken\n                }\n            });\n            if (!profileResponse.ok) {\n                throw new Error(\"Failed to fetch user profile\");\n            }\n            const userData = await profileResponse.json();\n            console.log(\"Setting user data:\", userData);\n            // Update user state\n            setUser(userData);\n            console.log(\"User state updated:\", userData);\n            // Wait for state updates using a promise\n            await new Promise((resolve)=>{\n                let attempts = 0;\n                const maxAttempts = 20 // 1 second total (20 * 50ms)\n                ;\n                const checkState = ()=>{\n                    attempts++;\n                    const currentToken = localStorage.getItem(\"token\");\n                    console.log(\"State check attempt \".concat(attempts, \":\"), {\n                        currentToken,\n                        stateToken: token,\n                        hasUser: !!user,\n                        expectedToken: authToken\n                    });\n                    if (currentToken === authToken && userData) {\n                        console.log(\"State check passed!\");\n                        resolve();\n                    } else if (attempts >= maxAttempts) {\n                        console.log(\"State check timed out!\");\n                        resolve() // Resolve anyway to prevent infinite loop\n                        ;\n                    } else {\n                        setTimeout(checkState, 50);\n                    }\n                };\n                checkState();\n            });\n            // Verify final state\n            const finalToken = localStorage.getItem(\"token\");\n            console.log(\"Final token check:\", finalToken);\n            if (!finalToken) {\n                throw new Error(\"Token was not properly saved\");\n            }\n            setIsLoading(false);\n            // Verify auth status before navigation\n            const authStatus = checkAuthStatus();\n            console.log(\"Auth status before navigation:\", authStatus);\n            if (!authStatus) {\n                console.error(\"Auth status check failed:\", {\n                    storedToken: localStorage.getItem(\"token\"),\n                    stateToken: token,\n                    hasUser: !!user\n                });\n                throw new Error(\"Authentication status check failed\");\n            }\n            console.log(\"Login process completed, navigating to dashboard...\");\n            router.push(\"/dashboard\");\n        } catch (error) {\n            console.error(\"Login failed:\", error);\n            // Cleanup on error\n            localStorage.removeItem(\"token\");\n            setToken(null);\n            setUser(null);\n            setIsLoading(false);\n            throw error;\n        }\n    };\n    const register = async (userData)=>{\n        setIsLoading(true);\n        try {\n            // Simulate API call\n            await new Promise((resolve)=>setTimeout(resolve, 1000));\n            // Mock successful registration\n            const authToken = \"mock-auth-token-\" + Math.random().toString(36).substring(2);\n            const newUser = {\n                id: \"1\",\n                name: userData.fullName,\n                email: userData.email,\n                phone: userData.phone,\n                creditScore: 700\n            };\n            setToken(authToken);\n            setUser(newUser);\n            localStorage.setItem(\"token\", authToken);\n            router.push(\"/dashboard\");\n        } catch (error) {\n            console.error(\"Registration failed:\", error);\n            throw error;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const logout = ()=>{\n        console.log(\"Starting logout process...\");\n        try {\n            // Remove token from localStorage\n            localStorage.removeItem(\"token\");\n            const tokenAfterRemoval = localStorage.getItem(\"token\");\n            console.log(\"Token after removal:\", tokenAfterRemoval);\n            // Clear state\n            setToken(null);\n            setUser(null);\n            setIsLoading(false);\n            console.log(\"Logout completed, redirecting to home...\");\n            router.push(\"/\");\n        } catch (error) {\n            console.error(\"Error during logout:\", error);\n            setIsLoading(false);\n        }\n    };\n    // Update checkAuthStatus to be more reliable\n    const checkAuthStatus = ()=>{\n        const storedToken = localStorage.getItem(\"token\");\n        const currentStatus = {\n            storedToken,\n            stateToken: token,\n            isAuthenticated: !!user,\n            isLoading\n        };\n        console.log(\"Current auth status:\", currentStatus);\n        // Check both stored token and state token\n        const hasValidToken = !!storedToken && storedToken === token;\n        const hasUser = !!user;\n        console.log(\"Auth check details:\", {\n            hasValidToken,\n            hasUser,\n            storedToken,\n            stateToken: token\n        });\n        return hasValidToken && hasUser;\n    };\n    // Add a function to verify auth state\n    const verifyAuthState = ()=>{\n        const storedToken = localStorage.getItem(\"token\");\n        const stateToken = token;\n        const hasUser = !!user;\n        console.log(\"Verifying auth state:\", {\n            storedToken,\n            stateToken,\n            hasUser,\n            isAuthenticated: !!user,\n            isLoading\n        });\n        return {\n            isValid: !!storedToken && !!user,\n            hasToken: !!storedToken,\n            hasUser,\n            stateToken\n        };\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            token,\n            isAuthenticated: !!user,\n            isLoading,\n            login,\n            register,\n            logout,\n            checkAuthStatus,\n            verifyAuthState\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Dell\\\\Desktop\\\\SOA\\\\mid-project-110181229\\\\frontend\\\\lib\\\\auth.tsx\",\n        lineNumber: 343,\n        columnNumber: 5\n    }, undefined);\n};\n_s(AuthProvider, \"UhpF3G6ZIIK9LkChMeraiQOms44=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = AuthProvider;\nconst useAuth = ()=>{\n    _s1();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n};\n_s1(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/auth.tsx\n"));

/***/ })

});