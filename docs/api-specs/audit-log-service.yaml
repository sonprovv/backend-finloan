openapi: 3.0.3
info:
  title: Audit Log Service API
  version: 1.0.0
  description: APIs for tracking and logging all important events and actions across the entire system.

servers:
  - url: http://localhost:8011

paths:
  /logs:
    post:
      summary: Record a new audit log entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: Source service name
                event_type:
                  type: string
                  description: Type of the event being logged
                event_action:
                  type: string
                  enum: [CREATE, READ, UPDATE, DELETE, LOGIN, LOGOUT, ACCESS, ERROR, OTHER]
                user_id:
                  type: integer
                  description: ID of the user who performed the action
                resource_type:
                  type: string
                  description: Type of resource being accessed/modified
                resource_id:
                  type: string
                  description: ID of the resource being accessed/modified
                description:
                  type: string
                  description: Description of the event
                details:
                  type: object
                  description: Additional event details
                severity:
                  type: string
                  enum: [INFO, WARNING, ERROR, CRITICAL]
                ip_address:
                  type: string
              required:
                - service
                - event_type
                - event_action
                - description
                - severity
      responses:
        '201':
          description: Log entry recorded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
    
    get:
      summary: Search audit logs with filters
      parameters:
        - in: query
          name: service
          schema:
            type: string
          required: false
          description: Filter by source service
        - in: query
          name: event_type
          schema:
            type: string
          required: false
          description: Filter by event type
        - in: query
          name: event_action
          schema:
            type: string
          required: false
          description: Filter by event action
        - in: query
          name: user_id
          schema:
            type: integer
          required: false
          description: Filter by user ID
        - in: query
          name: resource_type
          schema:
            type: string
          required: false
          description: Filter by resource type
        - in: query
          name: resource_id
          schema:
            type: string
          required: false
          description: Filter by resource ID
        - in: query
          name: severity
          schema:
            type: string
            enum: [INFO, WARNING, ERROR, CRITICAL]
          required: false
          description: Filter by severity
        - in: query
          name: start_time
          schema:
            type: string
            format: date-time
          required: false
          description: Filter by start timestamp
        - in: query
          name: end_time
          schema:
            type: string
            format: date-time
          required: false
          description: Filter by end timestamp
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          required: false
          description: Page number
        - in: query
          name: page_size
          schema:
            type: integer
            default: 50
            maximum: 100
          required: false
          description: Number of results per page
      responses:
        '200':
          description: List of matching audit logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  page:
                    type: integer
                  page_size:
                    type: integer
                  logs:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuditLog'
  
  /logs/{id}:
    get:
      summary: Get a specific audit log entry by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Audit log details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
  
  /logs/user/{user_id}:
    get:
      summary: Get audit logs for a specific user
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
        - in: query
          name: start_time
          schema:
            type: string
            format: date-time
          required: false
        - in: query
          name: end_time
          schema:
            type: string
            format: date-time
          required: false
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          required: false
        - in: query
          name: page_size
          schema:
            type: integer
            default: 50
          required: false
      responses:
        '200':
          description: User audit logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  page:
                    type: integer
                  page_size:
                    type: integer
                  logs:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuditLog'
  
  /logs/resource/{resource_type}/{resource_id}:
    get:
      summary: Get audit logs for a specific resource
      parameters:
        - in: path
          name: resource_type
          required: true
          schema:
            type: string
        - in: path
          name: resource_id
          required: true
          schema:
            type: string
        - in: query
          name: start_time
          schema:
            type: string
            format: date-time
          required: false
        - in: query
          name: end_time
          schema:
            type: string
            format: date-time
          required: false
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          required: false
        - in: query
          name: page_size
          schema:
            type: integer
            default: 50
          required: false
      responses:
        '200':
          description: Resource audit logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  page:
                    type: integer
                  page_size:
                    type: integer
                  logs:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuditLog'
  
  /logs/service/{service_name}:
    get:
      summary: Get audit logs for a specific service
      parameters:
        - in: path
          name: service_name
          required: true
          schema:
            type: string
        - in: query
          name: start_time
          schema:
            type: string
            format: date-time
          required: false
        - in: query
          name: end_time
          schema:
            type: string
            format: date-time
          required: false
        - in: query
          name: severity
          schema:
            type: string
            enum: [INFO, WARNING, ERROR, CRITICAL]
          required: false
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          required: false
        - in: query
          name: page_size
          schema:
            type: integer
            default: 50
          required: false
      responses:
        '200':
          description: Service audit logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  page:
                    type: integer
                  page_size:
                    type: integer
                  logs:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuditLog'
  
  /logs/stats:
    get:
      summary: Get audit log statistics
      parameters:
        - in: query
          name: start_time
          schema:
            type: string
            format: date-time
          required: false
        - in: query
          name: end_time
          schema:
            type: string
            format: date-time
          required: false
        - in: query
          name: group_by
          schema:
            type: string
            enum: [service, event_type, event_action, resource_type, severity]
          required: true
      responses:
        '200':
          description: Audit log statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  start_time:
                    type: string
                    format: date-time
                  end_time:
                    type: string
                    format: date-time
                  group_by:
                    type: string
                  stats:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        count:
                          type: integer
  
  /log-types:
    get:
      summary: Get all available log types
      responses:
        '200':
          description: List of log types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogType'
    
    post:
      summary: Register a new log type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name
                - description
      responses:
        '201':
          description: Log type created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogType'

components:
  schemas:
    AuditLog:
      type: object
      properties:
        id:
          type: string
        service:
          type: string
        event_type:
          type: string
        event_action:
          type: string
          enum: [CREATE, READ, UPDATE, DELETE, LOGIN, LOGOUT, ACCESS, ERROR, OTHER]
        user_id:
          type: integer
        resource_type:
          type: string
        resource_id:
          type: string
        description:
          type: string
        details:
          type: object
        severity:
          type: string
          enum: [INFO, WARNING, ERROR, CRITICAL]
        ip_address:
          type: string
        timestamp:
          type: string
          format: date-time
    
    LogType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
    
    LogSeverity:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          enum: [INFO, WARNING, ERROR, CRITICAL]
        description:
          type: string