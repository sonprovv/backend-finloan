openapi: 3.0.3
info:
  title: Auth Service API
  version: 1.0.0
  description: API for user authentication and authorization (JWT based).

servers:
  - url: http://auth-service:8001

paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  example: mySecureP@ssword
                email:
                  type: string
                  example: johndoe@example.com
              required:
                - username
                - password
                - email
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input

  /auth/login:
    post:
      summary: Login and receive JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  example: mySecureP@ssword
              required:
                - username
                - password
      responses:
        '200':
          description: Login successful, returns JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  token_type:
                    type: string
                    example: bearer
        '401':
          description: Invalid credentials

  /auth/validate:
    post:
      summary: Validate JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
              required:
                - token
      responses:
        '200':
          description: Token is valid
        '401':
          description: Invalid token

  /auth/me:
    get:
      summary: Get current user info based on JWT token
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User info fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  email:
                    type: string
                  roles:
                    type: array
                    items:
                      type: string
        '401':
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
